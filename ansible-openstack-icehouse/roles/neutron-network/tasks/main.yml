---
# tasks file for neutron-network
- name: install neutron packages
  yum: pkg={{ item }} state=installed
  with_items:
   - openstack-neutron
   - openstack-neutron-ml2
   - openstack-neutron-openvswitch

- name: Configure Network Common Components
  command: "{{ item }}"
  with_items:
   - openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://{{ CONTROLLER }}:5000
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_host {{ CONTROLLER }}
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_protocol http
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_port 35357
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_tenant_name service
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_user neutron
   - openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_password {{ NEUTRON_ADMIN_PASS }}
   - openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend neutron.openstack.common.rpc.impl_qpid
   - openstack-config --set /etc/neutron/neutron.conf DEFAULT qpid_hostname {{ CONTROLLER }}
   - openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2
   - openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins router

- name: Configure L3 Agent
  command: "{{ item }}"
  with_items:
   - openstack-config --set /etc/neutron/l3_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
   - openstack-config --set /etc/neutron/l3_agent.ini DEFAULT use_namespaces True

- name: Configure DHCP Agent
  command: "{{ item }}"
  with_items:
   - openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
   - openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq
   - openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT use_namespaces True
   - openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dnsmasq_config_file /etc/neutron/dnsmasq-neutron.conf

- name: dnsmasq-neutron.conf file
  lineinfile: dest=/etc/neutron/dnsmasq-neutron.conf state=present line="dhcp-option-force=26,1454"

- name: Configure Metadata Agent
  command: "{{ item }}"
  with_items:
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT auth_url http://{{ CONTROLLER }}:5000/v2.0
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT auth_region regionOne
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_tenant_name service
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_user neutron
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_password neutron
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_ip {{ CONTROLLER }}
   - openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret meta

- name: Configure metadata agent on controller
  command: "{{ item }}"
  with_items:
   - openstack-config --set /etc/nova/nova.conf DEFAULT service_neutron_metadata_proxy true
   - openstack-config --set /etc/nova/nova.conf DEFAULT neutron_metadata_proxy_shared_secret meta
  when: ansible_hostname == "{{ CONTROLLER }}"

- name: Restart nova api on controller
  service: name=openstack-nova-api state=restarted
  when: ansible_hostname == "{{ CONTROLLER }}"

- name: Configure Module Layer 2 (ML2) Plugin
  command: "{{ item }}"
  with_items:
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers gre
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types gre
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers openvswitch
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_gre tunnel_id_ranges 1:1000
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs local_ip {{ LOCAL_IP }}
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs tunnel_type gre
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs enable_tunneling True
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
   - openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_security_group True

- name: Enable Open vSwitch (OVS) Service
  service: name=openvswitch enabled=yes state=started

- name: Finalize the Install
  command: "{{ item }}"
  with_items:
   - cp /etc/init.d/neutron-openvswitch-agent /etc/init.d/neutron-openvswitch-agent.orig
   - sed -i 's,plugins/openvswitch/ovs_neutron_plugin.ini,plugin.ini,g' /etc/init.d/neutron-openvswitch-agent

- name: Enable neutron services
  service: name={{ item }} enabled=yes state=started
  with_items:
   - neutron-openvswitch-agent
   - neutron-l3-agent
   - neutron-dhcp-agent
   - neutron-metadata-agent

- name: Create ifcfg-br-ex file
  template: src=roles/neutron-network/files/ifcfg-br-ex.j2 dest=/etc/sysconfig/network-scripts/ifcfg-br-ex owner=root group=root mode=0644

- name: Create /etc/sysconfig/network-scripts/ifcfg-eth0
  template: src=roles/neutron-network/files/ifcfg-eth0.j2 dest=/etc/sysconfig/network-scripts/ifcfg-eth0 owner=root group=root mode=0644

- name: Update /etc/neutron/plugin.ini #1
  command: echo "network_vlan_ranges = physnet1" >> /etc/neutron/plugin.ini

- name: Update /etc/neutron/plugin.ini #2
  command: echo "bridge_mappings = physnet1:br-ex" >> /etc/neutron/plugin.ini

- name: restart networking
  command: service network restart

- name: Configure OVS bridge br-int
  openvswitch_bridge: bridge=br-int state=present

- name: Configure OVS bridge br-ex
  openvswitch_bridge: bridge=br-ex state=present

- name: Creates port eth0 on OVS bridge br-ex
  openvswitch_port: bridge=br-ex port=eth0 state=present

- name: create test networks
  script: roles/neutron-network/files/neutron.sh
